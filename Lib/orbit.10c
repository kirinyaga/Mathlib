; --------------------------------------------
; Title:   orbit
; Author:  kirinyaga
; Date:    24/06/2012
; Version: 1.5 included calls in stack & timing
; Version: 1.0
; --------------------------------------------
; Functions:
; orbellelts(A->[A]) calc l&b from e&a
; orbelts(A->[A]) pre-calc sin(i)&cos(i) from euler
; orbapsis(A,B->[B]) calc apo&peri from e&a
; orbpolar(A,B->[B]) calc r(theta)
; orbangspd(A,B->A) calc dtheta as period/32
; --------------------------------------------


; orbital elements
; a: semimajor axis
; e: excentricity (0:circle 1:parabol)
; Omega: longitude of ascending node
; i: inclination
; Omicron: argument of periapsis
; E: time of periapsis

; other
; mu: gravitational parameter
; 	mu = G(M+m) = GM when m<<M
; h: specific relative angular momentum
; 	h = |r x v| (vectors)

; elliptic elements
; l: semilatus rectum
; 	l = a(1-e^2) = |h|^2/mu
; b: semiminor axis
; 	b = a*sqrt(1-e^2) = l/sqrt(1-e^2) = sqrt(a*l)
; ap: apoapsis
;	ap = a(1+e)
; pe: periapsis
; 	pe = a(1-e)
; r: radius
; theta: true anomaly (angle from periapsis)
; 	r = l/(1+e*cos(theta))
; T: period
; 	T = 2pi*a*sqrt(a/mu)
; A: ellipsis area
;	A = pi*a*b = pi*a^2*sqrt(1-e^2)
; dA: portion of area
;	dA = dtheta * r^2/2
; theta': rotation speed
; 	theta' = sqrt(mu*l)/r^2 = h/r^2  (<<16 as a limit)
; dtheta: elliptically equal 1/32th rotation
; 	dtheta = (pi*a*b/16)/r^2




;orbellelts
; calculate semi-latus rectum (=l) & semi-minor axis (=b) from
; excentricity (=e) & semi-major axis (=a), for an elliptic orbit.
;
; in A: address of (e,a,l,b), e&a specified
; out [A]: l&b calculated
;
; use 9 words on stack
; A clobbered
;
; 33 words / 155-195 cycles
#segment code
orbellelts:	set push, c
			set push, b
			set c, [a]
			set b, a
			add b, 2
			set a, [a+1]
			_sqifp16(c)		; C=e^2
			xor c, -1
			add c, ONE+1	; C=1-e^2
			set [b], a		; l=a
			_mlifp16s([b],c); l=a(1-e^2)
			set c, b		; save B to C
			mul a, [b]
			set b, ex		; B:A=(l*a)<<14
			jsr sqrt32
			set [c+1], a	; b=sqrt(a*l)
			set b, pop
			set c, pop
			set pc, pop


;orbelts
; calculate sine & cosine of orbit plane inclination
; to speed up calculations later on.
;
; in A: address of euler angles (Omega,i,omega,sini,cosi), i specified
; out [A]: sini&cosi calculated
;
; use 6 words on stack
; A clobbered
;
; 16 words / 96-132 cycles
#segment code
orbelts:	set push, b
			set b, a
			set a, [b+1]
			jsr sin16
			set [b+3], a
			set a, [b+1]
			jsr cos16
			set [b+4], a
			set b, pop
			set pc, pop


;orbapsis
; calculate apoapsis & periapsis from
; excentricity (=e) & semi-major axis (=a), for an elliptic orbit.
;
; in A: address of (e,a,l,b), e,a,b specified
; in B: address of (apo,peri,dA)
; out [B]: apo,peri,dA calculated
;
; use 4 words on stack
; A clobbered
;
; 40 words / 52 cycles
#segment code
orbapsis:	set push, c
			set c, [a]		; C=e
			set push, [a+3]	; save b
			set a, [a+1]	; A=a
			set [b], c
			add [b], ONE
			_mlifp16s([b],a); ap=a(1+e)
			add b, 1
			set [b], ONE
			sub [b], c		; pe=1-e
			_mlifp16s([b],a); pe=a(1-e)
			mul a, pop
			set c, ex		; C:A=a*b *(PI/16>>11=1)
			shr a, 3
			set push, ex
			shr c, 3
			bor a, ex		; C:A=((pi*a*b)/16)>>14
			shr peek, 15
			add a, pop
			add c, ex		; round up C:A
.store:		set [b+2], c
			set [b+1], a	; dA[2]=C:A
			set c, pop
			set pc, pop


;orbpolar
; calculate the polar coords radius(=r) from true anomaly (=theta)
; for an elliptic orbit, given its elements.
;
; in A: address of (e,a,l,b), e&a specified
; in B: address of (r,theta) 16bits polar coordinates, theta specified
; out [B]: r calculated
;
; use 7 words on stack
; A clobbered
;
; 23 words / 67-85 cycles
#segment code
orbpolar:	set push, c
			set push, [a+2]	; [SP]=l
			set c, [a]		; C=e
			set a, [b+1]	; A=theta
			jsr cos16
			_mlifp16(c,a)
			add c, ONE		; C=1+e*cos(theta)
			dvi peek, c
			set [b], ex
			shr [b], 2
			asr peek, 2
			bor [b], ex		; r=l/C
			set c, pop
			set c, pop
			set pc, pop


;orbangspd
; returns dtheta, the angular variation for a 32th of period.
;
; in A: r, the radius
; in B: address of (ap,pre,dA) dA specified
; out A: dtheta
;
; use 3 words on stack
; B clobbered
;
; 25 words / 39 cycles
#segment code
orbangspd:	set push, c
			set c, a
			mul a, c
			set c, ex		; C:A=r*r
			shr a, 14
			set push, ex	; save shifted-out bits
			shr c, 14
			bor a, ex		; A=r*r>>14
			shr peek, 15
			add a, pop		; round up A
			ife a, 0
				set a, 1	; ensure A>0
			set c, a		; C=r*r
			set a, [b+2]
			set b, [b+3]	; B:A=dA
			div a, c
			set push, ex
			div b, c
			add a, ex		; A=dA/r^2
			shr peek, 15
			add a, pop		; round up A
			set c, pop
			set pc, pop

